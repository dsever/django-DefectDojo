name: Lint Helm chart
on:
  pull_request:
    branches:
      - master
      - dev
      - bugfix
      - release/**
      - hotfix/**

jobs:
  lint:
    name: Lint chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.4.0

      - uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Configure Helm repos
        run: |-
             helm repo add bitnami https://charts.bitnami.com/bitnami
             helm dependency list ./helm/defectdojo
             helm dependency update ./helm/defectdojo

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Determine target branch
        id: ct-branch-target
        run: |
          if [ ! -z ${GITHUB_BASE_REF} ]; then
            echo "ct-branch=${GITHUB_BASE_REF}" >> $GITHUB_ENV
          else
            echo "ct-branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          fi

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml --target-branch ${{ env.ct-branch}})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_ENV
          fi

      # run version check only if not dev as in dev we have a `x.y.z-dev` version
      # x.y.z gets bumped automatically when doing a release
      - name: Run chart-testing (lint)
        run: ct lint --config ct.yaml --target-branch ${{ env.ct-branch }} --check-version-increment=true
        if: ${{ env.changed == 'true' && env.ct-branch != 'dev' && env.ct-branch != 'bugfix' }}

      # run all checks but version increment always when something changed
      - name: Run chart-testing (lint)
        run: ct lint --config ct.yaml --target-branch ${{ env.ct-branch }} --check-version-increment=false
        if: env.changed == 'true'

      # - name: Create kind cluster
      #  uses: helm/kind-action@v1.1.0
      #  if: env.changed == 'true'

      # - name: Run chart-testing (install)
      #   run: ct install --config ct.yaml --target-branch ${{ env.ct-branch }} --helm-extra-args '--set createSecret=true --set createRabbitMqSecret=true --set createPostgresqlSecret=true --set timeout=900'
      #  if: env.changed == 'true'
---
name: 'Update Chart.lock'

on:
  pull_request_target:
    branches:
      - dev
    paths:
      - 'helm/defectdojo/**.yaml'
permissions:
  contents: write
jobs:
  update-chart-lock:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout bitnami/charts
        uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          path: charts
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.4.0

      - name: Execute generate new chart.lock
        run: |
          # Using the Github API to detect the files changed as git merge-base stops working when the branch is behind
          # and jitterbit/get-changed-files does not support pull_request_target
          #URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files"
          #files_changed_data=$(curl -s --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -X GET -G "$URL")
          #files_changed="$(echo $files_changed_data | jq -r '.[] | .filename')"
          # Adding || true to avoid "Process exited with code 1" errors
          #charts_dirs_changed="$(echo "$files_changed" | xargs dirname | grep -o "helm/[^/]*" | sort | uniq || true)"
          #for chart in ${charts_dirs_changed}; do
          #  echo "Updating README.md for ${chart}"
          #    readme-generator --values "charts/${chart}/values.yaml" --readme "charts/${chart}/README.md" --schema "/tmp/schema.json"
          # done
      - name: Push changes
        run: |
          # Push all the changes
          cd charts
          if git status -s | grep helm; then
            git config user.name "DefectDojo"
            git config user.email "defectdojo-project@owasp.org"
            git add . && git commit -am "Update README.md with readme-generator-for-helm" --signoff && git push
          fi
